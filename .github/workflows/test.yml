name: Test

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  ubuntu-test:
    runs-on: ubuntu-24.04

    defaults:
      run:
        shell: bash

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt -y update
          sudo apt -y install build-essential kmod curl wget libssl-dev libadwaita-1-dev fuse file libfuse2

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path --profile=minimal

      - name: Build project
        run: |
          PATH="${HOME}/.cargo/bin:${PATH}" cargo build
          PATH="${HOME}/.cargo/bin:${PATH}" cargo build --release

      - name: Upload debug artifact
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-debug
          path: ${{ github.workspace }}/target/debug/eternal_mod_manager

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-release
          path: ${{ github.workspace }}/target/release/eternal_mod_manager

  windows-test:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Build with Docker image
        uses: addnab/docker-run-action@v3
        with:
            image: powerball253/gtk4-cross:rust-gtk-4.14
            options: -v ${{ github.workspace }}:/mnt
            run: |
                source "$HOME/.cargo/env"
                cargo build --target=x86_64-pc-windows-gnu --locked
                cargo build --target=x86_64-pc-windows-gnu --release --locked

      - name: Upload debug artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-debug
          path: ${{ github.workspace }}/target/x86_64-pc-windows-gnu/debug/eternal_mod_manager.exe

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-release
          path: ${{ github.workspace }}/target/x86_64-pc-windows-gnu/release/eternal_mod_manager.exe

  msys2-ucrt64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: base-devel mingw-w64-ucrt-x86_64-toolchain mingw-w64-ucrt-x86_64-gtk4 mingw-w64-ucrt-x86_64-libadwaita

      - name: Compile
        run: |
          export PATH=$PATH:`cygpath $USERPROFILE/.cargo/bin`
          rustup default stable-x86_64-pc-windows-gnu
          cargo build --target=x86_64-pc-windows-gnu --locked
          cargo build --target=x86_64-pc-windows-gnu --release --locked

      - name: Upload debug artifact
        uses: actions/upload-artifact@v3
        with:
          name: msys-debug
          path: ${{ github.workspace }}/target/x86_64-pc-windows-gnu/debug/eternal_mod_manager.exe

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: msys-release
          path: ${{ github.workspace }}/target/x86_64-pc-windows-gnu/release/eternal_mod_manager.exe
